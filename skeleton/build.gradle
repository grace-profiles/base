buildscript {
    repositories {
@buildRepositories@
    }
    dependencies {
@buildDependencies@
    }
}

group "@grails.app.group@"
version "0.0.1-SNAPSHOT"

@buildPlugins@

repositories {
@repositories@
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    all {
        resolutionStrategy {
            // Force groovy using 4.0
            dependencySubstitution {
                substitute(module("org.codehaus.groovy:groovy")).using(module("org.apache.groovy:groovy:4.0.10"))
                substitute(module("org.codehaus.groovy:groovy-ant")).using(module("org.apache.groovy:groovy-ant:4.0.10"))
                substitute(module("org.codehaus.groovy:groovy-dateutil")).using(module("org.apache.groovy:groovy-dateutil:4.0.10"))
                substitute(module("org.codehaus.groovy:groovy-json")).using(module("org.apache.groovy:groovy-json:4.0.10"))
                substitute(module("org.codehaus.groovy:groovy-jmx")).using(module("org.apache.groovy:groovy-jmx:4.0.10"))
                substitute(module("org.codehaus.groovy:groovy-sql")).using(module("org.apache.groovy:groovy-sql:4.0.10"))
                substitute(module("org.codehaus.groovy:groovy-templates")).using(module("org.apache.groovy:groovy-templates:4.0.10"))
                substitute(module("org.codehaus.groovy:groovy-xml")).using(module("org.apache.groovy:groovy-xml:4.0.10"))
            }
        }
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
@dependencies@
}

java {
    sourceCompatibility = '17'
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}
